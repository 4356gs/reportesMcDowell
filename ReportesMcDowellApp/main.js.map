{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/reports/report-list/report-list.component.css","webpack:///./src/app/reports/report-list/report-list.component.html","webpack:///./src/app/reports/report-list/report-list.component.ts","webpack:///./src/app/reports/report/report.component.css","webpack:///./src/app/reports/report/report.component.html","webpack:///./src/app/reports/report/report.component.ts","webpack:///./src/app/reports/reports.component.css","webpack:///./src/app/reports/reports.component.html","webpack:///./src/app/reports/reports.component.ts","webpack:///./src/app/shared/notification.service.ts","webpack:///./src/app/shared/report.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-reports></app-reports>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'McdowellReport';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from \"./material/material.module\";\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\n\nimport { AppComponent } from './app.component';\nimport { ReportsComponent } from './reports/reports.component';\nimport { ReportComponent } from './reports/report/report.component';\nimport { ReportService } from './shared/report.service';\nimport { environment } from '../environments/environment';\nimport { ReportListComponent } from './reports/report-list/report-list.component';\nimport { DatePipe } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ReportsComponent,\n    ReportComponent,\n    ReportListComponent\n  ],\n  imports: [\n    BrowserModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    AngularFireDatabaseModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    FormsModule\n  ],\n  providers: [ReportService, DatePipe],\n  bootstrap: [AppComponent],\n  entryComponents:[ReportComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as Material from \"@angular/material\";\nimport {MatTabsModule} from '@angular/material/tabs';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    Material.MatToolbarModule,\n    Material.MatGridListModule,\n    Material.MatFormFieldModule,\n    Material.MatInputModule,\n    Material.MatDatepickerModule,\n    Material.MatNativeDateModule,\n    Material.MatSelectModule,\n    Material.MatButtonModule,\n    Material.MatSnackBarModule,\n    Material.MatTableModule,\n    Material.MatIconModule,\n    Material.MatSortModule,\n    Material.MatPaginatorModule,\n    Material.MatDialogModule,\n    Material.MatTabsModule\n  ],\n\n  exports : [\n    Material.MatToolbarModule,\n    Material.MatGridListModule,\n    Material.MatFormFieldModule,\n    Material.MatInputModule,\n    Material.MatDatepickerModule,\n    Material.MatNativeDateModule,\n    Material.MatSelectModule,\n    Material.MatButtonModule,\n    Material.MatSnackBarModule,\n    Material.MatTableModule,\n    Material.MatIconModule,\n    Material.MatSortModule,\n    Material.MatPaginatorModule,\n    Material.MatDialogModule,\n    Material.MatTabsModule\n  ],\n  declarations: []\n})\nexport class MaterialModule { }\n ","module.exports = \"\"","module.exports = \"<div class=\\\"search-div\\\">\\n  <button mat-raised-button (click)=\\\"onCreate()\\\">\\n      <mat-icon>add</mat-icon>Create\\n  </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n      <input matInput [(ngModel)]=\\\"searchKey\\\" placeholder=\\\"Search\\\" autocomplete=\\\"off\\\" (keyup)=\\\"applyFilter()\\\">\\n      <button mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\"*ngIf=\\\"searchKey\\\"  (click)=\\\"onSearchClear()\\\">\\n        <mat-icon>close</mat-icon>\\n      </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <mat-table [dataSource]=\\\"listData\\\" matSort>\\n    <ng-container matColumnDef=\\\"pReportNo\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Report No</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.pReportNo}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"receivers\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Receivers</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.receivers}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"container\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Place of Inspection</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\">{{element.placeOfInspection}}</mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button mat-icon-button (click)=\\\"onEdit(row)\\\">\\n          <mat-icon>launch</mat-icon>\\n        </button>\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"onDelete(row)\\\">\\n          <mat-icon>delete_outline</mat-icon>\\n        </button>\\n      </mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspam=\\\"6\\\">\\n        Loading data....\\n      </mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n        <mat-footer-cell *matFooterCellDef colspam=\\\"6\\\">\\n          No data....\\n        </mat-footer-cell>\\n      </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':listData!=null}\\\"></mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\" [ngClass]=\\\"{'hide':!(listData!=null && listData.data.length==0)}\\\"></mat-footer-row>\\n  </mat-table>\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n</div>\"","import { Component, OnInit, ViewChild  } from '@angular/core';\nimport { ReportService } from '../../shared/report.service';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { MatDialog, MatDialogConfig} from \"@angular/material\";\nimport { ReportComponent } from '../report/report.component';\nimport { NotificationService } from '../../shared/notification.service';\n\n@Component({\n  selector: 'app-report-list',\n  templateUrl: './report-list.component.html',\n  styleUrls: ['./report-list.component.css']\n})\nexport class ReportListComponent implements OnInit {\n\n  constructor(private service: ReportService,\n    private dialog: MatDialog,\n    private notificationService: NotificationService) { }\n\n  listData: MatTableDataSource<any>;\n  displayedColumns: string[] = ['pReportNo', 'receivers', 'container', 'actions'];\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  searchKey: string;\n\n\n\n  ngOnInit() {\n    this.service.getReports().subscribe(\n      list => {\n        let array = list.map(item => {\n          return {\n            $key:item.key,\n            ...item.payload.val()\n          };\n        });\n        this.listData = new MatTableDataSource(array);\n        this.listData.sort = this.sort;\n        this.listData.paginator = this.paginator;\n        this.listData.filterPredicate = (data, filter) => {\n          return this.displayedColumns.some(ele => {\n            return ele != 'actions' && data[ele].toLowerCase().indexOf(filter) != -1;\n          });\n        };\n      });\n  }\n\n  onSearchClear() {\n    this.searchKey = \"\";\n    this.applyFilter();\n  }\n\n  applyFilter(){\n    this.listData.filter = this.searchKey.trim().toLowerCase();\n  }\n\n  onCreate() {\n    this.service.initializeFormGroup();\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"60%\";\n    this.dialog.open(ReportComponent, dialogConfig);\n    \n  }\n  onEdit(row){\n    this.service.populateForm(row);\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"60%\";\n    this.dialog.open(ReportComponent, dialogConfig);\n  }\n  \n  onDelete($key){\n    if(confirm('Do you really want to delete this record ?')){\n      this.service.deleteReport($key);\n      this.notificationService.warn('Deleted Successfully!');\n    }\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-toolbar>\\n    <span>{{service.form.controls['$key'].value?\\\"Edit Report\\\":\\\"New Report\\\"}}</span>\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabindex=\\\"-1\\\">\\n        <mat-icon>clear</mat-icon>\\n    </button>\\n</mat-toolbar>\\n\\n<form [formGroup]=\\\"service.form\\\" class=\\\"normal-form\\\" (submit)=\\\"onSubmit()\\\">\\n    <mat-tab-group>\\n        <mat-tab label=\\\"1.0 General details\\\">\\n            <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"300px\\\">\\n                <mat-grid-tile>\\n                    <div class=\\\"controles-container\\\">\\n                        <input type=\\\"hidden\\\" formControlName=\\\"$key\\\">\\n                        <mat-form-field>\\n                            <input formControlName=\\\"pReportNo\\\" matInput placeholder=\\\"Report No. *\\\">\\n                            <mat-error>This field is mandatory</mat-error>\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <input formControlName=\\\"containerNo\\\" matInput placeholder=\\\"Container No\\\">\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <input formControlName=\\\"receivers\\\" matInput placeholder=\\\"Receivers *\\\">\\n                            <mat-error>This field is mandatory</mat-error>\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <input formControlName=\\\"arrivalDate\\\" matInput [matDatepicker]=\\\"pickerd\\\" placeholder=\\\"Date of Arrival\\\">\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"pickerd\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker #pickerd></mat-datepicker>\\n                            <mat-error>This field is mandatory</mat-error>\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <mat-select formControlName=\\\"inspectionType\\\" placeholder=\\\"Type of Inspection\\\">\\n                                <mat-option>None</mat-option>\\n                                <ng-container *ngFor=\\\"let inspectionType of inspectionType\\\">\\n                                    <mat-option value=\\\"{{inspectionType.id}}\\\">{{inspectionType.value}}</mat-option>\\n                                </ng-container>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                </mat-grid-tile>\\n                <mat-grid-tile>\\n                    <div class=\\\"controles-container\\\">\\n                        <input type=\\\"hidden\\\" formControlName=\\\"$key\\\">\\n                        <mat-form-field>\\n                            <input formControlName=\\\"requestor\\\" matInput placeholder=\\\"Requestor *\\\">\\n                            <mat-error>This field is mandatory</mat-error>\\n                            <mat-error *ngIf=\\\"service.form.controls['requestor'].error?.required\\\">This field is\\n                                mandatory</mat-error>\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <input formControlName=\\\"sealNo\\\" matInput placeholder=\\\"Seal No.\\\">\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <input formControlName=\\\"placeOfInspection\\\" matInput placeholder=\\\"Place of Inspection\\\">\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <input formControlName=\\\"inspectionDate\\\" matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Date of Inspection\\\">\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker #picker></mat-datepicker>\\n                            <mat-error>This field is mandatory</mat-error>\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <mat-select formControlName=\\\"carrier\\\" matInput placeholder=\\\"Carrier\\\">\\n                                <mat-option>None</mat-option>\\n                                <ng-container *ngFor=\\\"let carrier of carrier\\\">\\n                                    <mat-option value=\\\"{{carrier.id}}\\\">{{carrier.value}}</mat-option>\\n                                </ng-container>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                </mat-grid-tile>\\n            </mat-grid-list>\\n\\n\\n        </mat-tab>\\n        <mat-tab label=\\\"2.0 Transport details\\\">\\n            <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"300px\\\">\\n                <mat-grid-tile>\\n                    <div class=\\\"controles-container\\\">\\n                        <mat-form-field>\\n                            <input formControlName=\\\"blNo\\\" matInput placeholder=\\\"BL No.\\\">\\n                            <!-- <mat-error>This field is mandatory</mat-error> -->\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <input formControlName=\\\"polNo\\\" matInput placeholder=\\\"POL\\\">\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <mat-select formControlName=\\\"transferAtPort\\\" placeholder=\\\"Transfer At Port Of\\\">\\n                                <mat-option>None</mat-option>\\n                                <ng-container *ngFor=\\\"let port of port\\\">\\n                                    <mat-option value=\\\"{{port.id}}\\\">{{port.value}}</mat-option>\\n                                </ng-container>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                </mat-grid-tile>\\n                <mat-grid-tile>\\n                    <div class=\\\"controles-container\\\">\\n                        <mat-form-field>\\n                            <mat-select formControlName=\\\"packingType\\\" placeholder=\\\"Type of Packing\\\">\\n                                <mat-option>None</mat-option>\\n                                <ng-container *ngFor=\\\"let packingType of packingType\\\">\\n                                    <mat-option value=\\\"{{packingType.id}}\\\">{{packingType.value}}</mat-option>\\n                                </ng-container>\\n                            </mat-select>\\n                        </mat-form-field>\\n\\n                        <mat-form-field>\\n                            <input formControlName=\\\"pod\\\" matInput placeholder=\\\"POD\\\">\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <input formControlName=\\\"onDate\\\" matInput [matDatepicker]=\\\"pickerOnDate\\\" placeholder=\\\"OnDate\\\">\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"pickerOnDate\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker #pickerOnDate></mat-datepicker>\\n                        </mat-form-field>\\n\\n                    </div>\\n                </mat-grid-tile>\\n            </mat-grid-list>\\n\\n\\n\\n        </mat-tab>\\n        <mat-tab label=\\\"3.0 Consignement details\\\">\\n            <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"300px\\\">\\n                <mat-grid-tile>\\n                    <div class=\\\"controles-container\\\">\\n                        <mat-form-field>\\n                            <input formControlName=\\\"cargoDeclaredAs\\\" matInput placeholder=\\\"Cargo Declare As\\\">\\n                            <!-- <mat-error>This field is mandatory</mat-error> -->\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <input formControlName=\\\"weight\\\" matInput placeholder=\\\"Weight in Kg\\\">\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <mat-select formControlName=\\\"unitType\\\" placeholder=\\\"Type Of Unit\\\">\\n                                <mat-option>None</mat-option>\\n                                <ng-container *ngFor=\\\"let unitType of unitType\\\">\\n                                    <mat-option value=\\\"{{unitType.id}}\\\">{{unitType.value}}</mat-option>\\n                                </ng-container>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                </mat-grid-tile>\\n                <mat-grid-tile>\\n                    <div class=\\\"controles-container\\\">\\n                        <mat-form-field>\\n                            <input formControlName=\\\"quantity\\\" matInput placeholder=\\\"Quantity\\\">\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <mat-select formControlName=\\\"stowageType\\\" placeholder=\\\"Type of Stowage\\\">\\n                                <mat-option>None</mat-option>\\n                                <ng-container *ngFor=\\\"let stowageType of stowageType\\\">\\n                                    <mat-option value=\\\"{{stowageType.id}}\\\">{{stowageType.value}}</mat-option>\\n                                </ng-container>\\n                            </mat-select>\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <mat-select formControlName=\\\"damageType\\\" placeholder=\\\"Type of Damage\\\">\\n                                <mat-option>None</mat-option>\\n                                <ng-container *ngFor=\\\"let damageType of damageType\\\">\\n                                    <mat-option value=\\\"{{damageType.id}}\\\">{{damageType.value}}</mat-option>\\n                                </ng-container>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                </mat-grid-tile>\\n            </mat-grid-list>\\n        </mat-tab>\\n        <mat-tab label=\\\"4.0 Comments\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <textarea formControlName=\\\"description\\\" autosize matInput placeholder=\\\"Brief description of inspection details:\\\"></textarea>\\n            </mat-form-field> \\n            <mat-form-field class=\\\"example-full-width\\\">\\n                    <textarea formControlName=\\\"conclusion\\\" autosize matInput placeholder=\\\"Conclusion:\\\"></textarea>\\n                </mat-form-field>\\n        </mat-tab>\\n    </mat-tab-group>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n    <div class=\\\"button-row\\\">\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"service.form.invalid\\\">Submit</button>\\n        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear()\\\">Clear</button>\\n    </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { ReportService } from '../../shared/report.service';\nimport { NotificationService } from '../../shared/notification.service';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n  \n  constructor(private service: ReportService,\n      private notificationService: NotificationService,\n      public dialogRef: MatDialogRef<ReportComponent>) { }\n\n  inspectionType = [\n    { id: 1, value: \"Devaning\"},\n    { id: 2, value: \"Tally\"},\n    { id: 3, value: \"Cross-stuffing\"},\n    { id: 4, value: \"Discharge\"},\n    { id: 5, value: \"Loading\"},\n    { id: 6, value: \"Other / See Comments\"}\n  ]\n\n  carrier = [\n    { id: 1, value: \"Maersk\"},\n    { id: 2, value: \"MSC\"},\n    { id: 3, value: \"CMA-CGM\"},\n    { id: 4, value: \"Hamburg Sud\"},\n    { id: 5, value: \"Evergreen\"},\n    { id: 6, value: \"King Ocean Services\"}\n  ]\n\n  port = [\n    { id: 1, value: \"Caucedo\"},\n    { id: 2, value: \"Rio Haina\"},\n    { id: 3, value: \"Miami\"},\n    { id: 4, value: \"Port Everglades\"},\n    { id: 5, value: \"Jacksonville\"},\n    { id: 6, value: \"Not Applicable\"}\n  ]\n\n  packingType = [\n    { id: 1, value: \"Cardboard Boxes\"},\n    { id: 2, value: \"Bags\"},\n    { id: 3, value: \"Drums\"},\n    { id: 4, value: \"Steel Container\"},\n    { id: 5, value: \"Plastic Container\"},\n    { id: 6, value: \"IBC\"},\n    { id: 7, value: \"Big Bag\"}\n  ]\n\n  damageType = [\n    { id: 1, value: \"Missing\"},\n    { id: 2, value: \"Wet\"},\n    { id: 3, value: \"Broken\"},\n    { id: 4, value: \"Short Landing\"},\n    { id: 5, value: \"None\"},\n    { id: 6, value: \"See comments\"},\n    { id: 7, value: \"Damage to Unit Only\"},\n    { id: 8, value: \"Damage to Cargo Only\"}\n  ]\n\n  stowageType = [\n    { id: 1, value: \"Palletized\"},\n    { id: 2, value: \"Loose\"},\n    { id: 3, value: \"Bulk\"}\n  ]\n\n  unitType = [\n    { id: 1, value: \"Dry Van \"},\n    { id: 2, value: \"Refrigerated\"},\n    { id: 3, value: \"Flat Rack\"},\n    { id: 4, value: \"Open Top\"},\n    { id: 5, value: \"FlatBulk\"}\n  ]\n\n  ngOnInit() {\n    this.service.getReports();\n  }\n\n  onClear() {\n    this.service.form.reset();\n    this.service.initializeFormGroup();\n  }\n\n  onSubmit() {\n    if(this.service.form.valid) {\n      if(!this.service.form.get('$key').value)\n        this.service.insertReport(this.service.form.value);\n\n      else\n        this.service.updateReport(this.service.form.value);\n        console.log(this.service.form.value);  \n      this.service.form.reset();\n      this.service.initializeFormGroup();\n      this.notificationService.success(':: Submitted successfully')\n      this.onClose();\n    }\n  }\n\n  onClose() {\n    this.service.form.reset();\n    this.service.initializeFormGroup();\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <mat-toolbar>\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <span>MCDowell ERP</span>\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n  </mat-toolbar>\\n  <app-report-list></app-report-list>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.css']\n})\nexport class ReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(public snackBar: MatSnackBar) { }\n\n  config: MatSnackBarConfig={\n    duration: 4500,\n    horizontalPosition: 'right',\n    verticalPosition: 'top'\n\n  }\n\n  success(msg) {\n    this.config['panelClass'] = ['notification', 'success'];\n    this.snackBar.open(msg, '', this.config);\n  }\n\n  warn(msg){\n    this.config['panelClass'] = ['notification', 'warn'];\n    this.snackBar.open(msg, '', this.config);\n  };\n  \n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup, FormControl, Validator, Validators } from \"@angular/forms\";\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\nimport { DatePipe } from '@angular/common';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportService {\n\n  constructor(private firebase: AngularFireDatabase, private datePipe: DatePipe) { }\n\n  reportList: AngularFireList<any>;\n\n  form: FormGroup = new FormGroup({\n    $key: new FormControl(null),\n    pReportNo: new FormControl('', Validators.required),\n    requestor: new FormControl('',  Validators.required),\n    containerNo: new FormControl(''),\n    sealNo: new FormControl(''),\n    receivers: new FormControl('',  Validators.required),\n    placeOfInspection: new FormControl(''),\n    arrivalDate: new FormControl('', Validators.required),\n    inspectionDate: new FormControl('', Validators.required),\n    inspectionType: new FormControl(''),\n    carrier: new FormControl(''),\n    \n    blNo: new FormControl(''),\n    polNo: new FormControl(''),\n    transferAtPort: new FormControl(''),\n    packingType: new FormControl(''),\n    pod: new FormControl(''),\n    onDate: new FormControl('', Validators.required),\n\n    cargoDeclaredAs: new FormControl(''),\n    weight: new FormControl(''),\n    unitType: new FormControl(''),\n    quantity: new FormControl(''),\n    stowageType: new FormControl(''),\n    damageType: new FormControl(''),\n\n    description: new FormControl(''),\n    conclusion: new FormControl('')\n\n  });\n\n  initializeFormGroup() {\n    this.form.setValue({\n      $key: null,\n      pReportNo: '',\n      requestor: '',\n      containerNo: '',\n      sealNo: '',\n      receivers: '',\n      placeOfInspection:'',\n      arrivalDate: '',\n      inspectionDate: '',\n      inspectionType: '',\n      carrier: '',\n\n      blNo: '',\n      polNo: '',\n      transferAtPort: '',\n      packingType: '',\n      pod: '',\n      onDate: '',\n\n      cargoDeclaredAs: '',\n      weight: '',\n      unitType: '',\n      quantity: '',\n      stowageType: '',\n      damageType: '',\n\n      description: '',\n      conclusion: ''\n    });\n  }\n\n  getReports() {\n    this.reportList = this.firebase.list('reports');\n    return this.reportList.snapshotChanges();\n    \n  }\n\n  insertReport(report){\n    this.reportList.push({\n      pReportNo:report.pReportNo,\n      requestor: report.requestor,\n      containerNo: report.containerNo,\n      sealNo: report.sealNo,\n      receivers: report.receivers,\n      placeOfInspection: report.placeOfInspection,\n      arrivalDate: this.datePipe.transform(report.arrivalDate,'yyyy-MM-dd'),\n      inspectionDate: this.datePipe.transform(report.inspectionDate,'yyyy-MM-dd'),\n      inspectionType: report.inspectionType,\n      carrier: report.carrier,\n\n      blNo: report.blNo,\n      polNo: report.polNo,\n      transferAtPort: report.transferAtPort,\n      packingType: report.packingType,\n      pod: report.pod,\n      onDate: this.datePipe.transform(report.onDate,'yyyy-MM-dd'),\n\n      cargoDeclaredAs: report.cargoDeclaredAs,\n      weight: report.weight,\n      unitType: report.unitType,\n      quantity: report.quantity,\n      stowageType: report.stowageType,\n      damageType: report.damageType,\n\n      description: report.description,\n      conclusion: report.conclusion\n\n    });\n  }\n  updateReport(report){\n    this.reportList.update(report.$key,\n      {\n        pReportNo:report.pReportNo,\n        requestor: report.requestor,\n        containerNo: report.containerNo,\n        sealNo: report.sealNo,\n        receivers: report.receivers,\n        placeOfInspection: report.placeOfInspection,\n        arrivalDate: this.datePipe.transform(report.arrivalDate,'yyyy-MM-dd'),\n        inspectionDate: this.datePipe.transform(report.inspectionDate,'yyyy-MM-dd'),\n        inspectionType: report.inspectionType,\n        carrier: report.carrier,\n\n        blNo: report.blNo,\n        pol: report.pol,\n        transferAtPort: report.transferAtPort,\n        packingType: report.packingType,\n        pod: report.pod,\n        onDate: this.datePipe.transform(report.onDate,'yyyy-MM-dd'),\n\n        cargoDeclaredAs: report.cargoDeclaredAs,\n        weight: report.weight,\n        unitType: report.unitType,\n        quantity: report.quantity,\n        stowageType: report.stowageType,\n        damageType: report.damageType,\n\n        description: report.description,\n        conclusion: report.conclusion\n    });\n  }\ndeleteReport($key: string) {\n    this.reportList.remove($key);\n}\n\npopulateForm(report){\n  this.form.setValue(report);\n}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyCT7LDEYXnBpS8ICcXzJFyhs6G1un30xV4\",\n    authDomain: \"mcdowell-dde9b.firebaseapp.com\",\n    databaseURL: \"https://mcdowell-dde9b.firebaseio.com\",\n    projectId: \"mcdowell-dde9b\",\n    storageBucket: \"mcdowell-dde9b.appspot.com\",\n    messagingSenderId: \"40406808804\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}